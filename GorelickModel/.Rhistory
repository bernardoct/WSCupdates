a = c(2,3,5,7,1,9,10,33,-12)
with(a, order())
a[with(a, order())]
a[with(a, order(a))]
sort(a)
order(a)
a
order(as.numeric(a))
a[order(a)]
rank(a)
d = c(1.0, 2.333, 5.67876, 100, 23.44, -100.2)
order(d)
plot(a, rank(a)/length(a))
xx = order(a)
plot(a[xx],(1:length(a))/length(a)),type="S")
plot(a[xx],(1:length(a))/length(a)),type="S"))
plot(a[xx],(1:length(a))/length(a),type="S")
xx
a
length(a)
1:length(a)
a[xx]
a[order(a)]
(1:length(a)/length(a))
installed.packages()
install.packages("ggplot2", dep = TRUE)
library(ggplot2)
install.packages("ggplot2")
install.packages("multcomp")
install.packages("Rcpp")
install.packages("devtools", dependencies = TRUE)
library(devtools)
install_github("ggobi/ggally")
library(GGally)
fix()
200+200+200+176+175+185+200+200+175+154+138+200+200+157+162+177+185+200
14049-6349
rm(list = ls())
setwd("C:\\Users\\David\\OneDrive\\UNC\\Research\\WSC\\GorelickModelOutput")
# three subfolders within this, one per formulation
#resultpath = paste("ModelResults_", Sys.Date(), "\\", sep = "")
#dir.create(resultpath)
figurepath = paste("Figures_", Sys.Date(), "\\", sep = "")
dir.create(figurepath)
datafolder = "output\\"
numranks = 4
numforms = 3
RDMnum   = 0
library(ggplot2)
library(reshape2)
dir.create(figurepath)
getwd()
D = data.frame(Year = 1:5,
A = c(2.3,2.5,1.9,2.4,2.1),
B = c(1.3,5.0,0.8,1.9,1.1),
C = c(2.1,2.5,4.0,3.6,3.0),
D = c(0.8,1.2,1.4,1.0,1.1))
D
cor(D)
cor(D$A, D$B)
cor(D$C, D$D)
cor(D$A, D$B)
cor(D$C, D$D)
cov(D$A, D$B)
cov(D$C, D$D)
ndrivers0  = 1000
ndrivers1  = 10000
muaccident = 0.1
muclaim    = 15000
sdclaim    = 4500
probruin   = 0.025
Reserve0 = (1.96 * sdclaim * muclaim^0.5) + (ndrivers0 * muclaim)
Reserve1 = (1.96 * sdclaim * muclaim^0.5) + (ndrivers1 * muclaim)
Reserve0 = (1.96 * sdclaim^2 * ndrivers0^0.5) + (ndrivers0 * muclaim)
Reserve1 = (1.96 * sdclaim^2 * ndrivers1^0.5) + (ndrivers1 * muclaim)
Reserve0/ndrivers0
Reserve1/ndrivers1
Reserve0 = (1.96 * sdclaim * ndrivers0^0.5) + (ndrivers0 * muclaim)
Reserve1 = (1.96 * sdclaim * ndrivers1^0.5) + (ndrivers1 * muclaim)
Reserve0/ndrivers0
Reserve1/ndrivers1
rm(list=ls())
setwd("C:\\Users\\David\\OneDrive\\UNC\\Classes\\Spring2017\\Envr788")
D = read.csv("Rainfall200yrs.csv", header = F)
IndexRainfall = apply(D[23:28,], MARGIN = 2, sum)
CropYield     = apply(D[23:28,], MARGIN = 2, function(x) {if (sum(x) > 25) {100} else {100- 2*(30-sum(x))}})
CostLocal  = 1.20
CostMarket = 2.35
LocalCosts = CropYield * 8250 * CostLocal
MarketCosts = (100-CropYield) * 8250 * CostMarket
TotalCosts = MarketCosts + LocalCosts
VaR99 = quantile(TotalCosts, 0.99)
library(ggplot2)
ggplot() + geom_histogram(aes(TotalCosts), bins = 40) +
ggtitle("Distribution of Costs Index") +
ylab("Count") + xlab("Annual Costs (USD)")
mean(TotalCosts)
sd(TotalCosts)
library(ggplot2)
ggplot() + geom_histogram(aes(TotalCosts), bins = 30) +
ggtitle("Distribution of Costs Index") +
ylab("Count") + xlab("Annual Costs (USD)")
mean(TotalCosts)
sd(TotalCosts)
library(ggplot2)
ggplot() + geom_histogram(aes(TotalCosts), bins = 20) +
ggtitle("Distribution of Costs Index") +
ylab("Count") + xlab("Annual Costs (USD)")
mean(TotalCosts)
sd(TotalCosts)
library(ggplot2)
ggplot() + geom_histogram(aes(TotalCosts), bins = 10) +
ggtitle("Distribution of Costs Index") +
ylab("Count") + xlab("Annual Costs (USD)")
mean(TotalCosts)
sd(TotalCosts)
library(ggplot2)
ggplot() + geom_histogram(aes(TotalCosts), bins = 15) +
ggtitle("Distribution of Costs Index") +
ylab("Count") + xlab("Annual Costs (USD)")
mean(TotalCosts)
sd(TotalCosts)
library(ggplot2)
ggplot() + geom_histogram(aes(TotalCosts), bins = 20) +
ggtitle("Distribution of Costs Index") +
ylab("Count") + xlab("Annual Costs (USD)")
mean(TotalCosts)
sd(TotalCosts)
library(ggplot2)
ggplot() + geom_histogram(aes(TotalCosts), bins = 25) +
ggtitle("Distribution of Costs Index") +
ylab("Count") + xlab("Annual Costs (USD)")
mean(TotalCosts)
sd(TotalCosts)
library(ggplot2)
ggplot() + geom_histogram(aes(IndexRainfall), bins = 25) +
ggtitle("Distribution of Index Values") +
ylab("Count") + xlab("Rainfall (in)")
mean(IndexRainfall)
sd(IndexRainfall)
library(ggplot2)
ggplot() + geom_histogram(aes(IndexRainfall), bins = 30) +
ggtitle("Distribution of Index Values") +
ylab("Count") + xlab("Rainfall (in)")
mean(IndexRainfall)
sd(IndexRainfall)
library(ggplot2)
ggplot() + geom_histogram(aes(IndexRainfall), bins = 40) +
ggtitle("Distribution of Index Values") +
ylab("Count") + xlab("Rainfall (in)")
mean(IndexRainfall)
sd(IndexRainfall)
library(ggplot2)
ggplot() + geom_histogram(aes(IndexRainfall), bins = 35) +
ggtitle("Distribution of Index Values") +
ylab("Count") + xlab("Rainfall (in)")
mean(IndexRainfall)
sd(IndexRainfall)
library(ggplot2)
ggplot() + geom_histogram(aes(IndexRainfall), bins = 40) +
ggtitle("Distribution of Index Values") +
ylab("Count") + xlab("Rainfall (in)")
mean(IndexRainfall)
sd(IndexRainfall)
library(ggplot2)
ggplot() + geom_histogram(aes(IndexRainfall), bins = 20) +
ggtitle("Distribution of Index Values") +
ylab("Count") + xlab("Rainfall (in)")
mean(IndexRainfall)
sd(IndexRainfall)
library(ggplot2)
ggplot() + geom_histogram(aes(IndexRainfall), bins = 20) +
ggtitle("Distribution of Index Values") +
ylab("Count") + xlab("Rainfall (in)")
mean(IndexRainfall)
sd(IndexRainfall)
quantile(TotalCosts, 0.01)
library(ggplot2)
ggplot() + geom_histogram(aes(IndexRainfall), bins = 20) +
ggtitle("Distribution of Index Values") +
ylab("Count") + xlab("Rainfall (in)")
mean(IndexRainfall)
sd(IndexRainfall)
quantile(IndexRainfall, 0.01)
Yield99 = 100 - 2 * (30 - quantile(IndexRainfall, 0.01))
Yield99
Yield99 = 100 - 2 * (30 - quantile(IndexRainfall, 0.01))
LocalCosts99 = Yield99 * 8250 * CostLocal
MarketCosts99 = (100-Yield99) * 8250 * CostMarket
MarketCosts99 + LocalCosts99
VaR99
20.5/(1.0158^3)
-20.5/(1.0158^3)+20.18+0.27
-20.5/(1.0158^0.25)+20.18+0.27
20.5/(1.0158^0.25)
rm(list=ls())
setwd("C:\\Users\\David\\OneDrive\\UNC\\Classes\\Spring2017\\Envr788")
D = read.csv("Rainfall200yrs.csv", header = F)
IndexRainfall = apply(D[23:28,], MARGIN = 2, sum)
CropYield     = apply(D[23:28,], MARGIN = 2, function(x) {if (sum(x) > 25) {100} else {100- 2*(30-sum(x))}})
CostLocal  = 1.20
CostMarket = 2.35
LocalCosts = CropYield * 8250 * CostLocal
MarketCosts = (100-CropYield) * 8250 * CostMarket
TotalCosts = MarketCosts + LocalCosts
SortCosts = sort(TotalCosts, decreasing = T)
VaR99 = quantile(TotalCosts, 0.99)
head(SortCosts)
length(SortCosts)
SortCosts = sort(TotalCosts, decreasing = T)
VaR99 = (length(SortCosts)*0.01 - 2)*(SortCosts[3]-SortCosts[2]) + SortCosts[2]
VaR99
library(ggplot2)
ggplot() + geom_histogram(aes(IndexRainfall), bins = 20) +
ggtitle("Distribution of Index Values") +
ylab("Count") + xlab("Rainfall (in)")
mean(IndexRainfall)
sd(IndexRainfall)
quantile(IndexRainfall, 0.01)
Yield99 = 100 - 2 * (30 - quantile(IndexRainfall, 0.01))
LocalCosts99 = Yield99 * 8250 * CostLocal
MarketCosts99 = (100-Yield99) * 8250 * CostMarket
MarketCosts99 + LocalCosts99
summary(D)
summary(CropYield)
sum(CropYield == 100)
8250*18.08*2.35
8250*18.08*2.35*0.2
+350526
70105.2+350526
sd(CropYield)
sd(CropYield)*8250*2.35
sd(CropYield)*8250*2.35*0.1
sd(CropYield)*8250*2.35*0.1 + 8250*18.08*2.35
rm(list=ls())
setwd("C:\\Users\\David\\OneDrive\\UNC\\Research\\WSC\\Coding\\GorelickModel")
filesize = 10
# number of realizations
Data = read.csv("output\\weeklyevap0_0_0.csv", header = T, nrows = 2392*filesize)
Data = Data[with(Data, order(Realization, Year, Week)),]
# read in one realization of weekly demand data
Data = read.csv("output\\weeklyevap0_0_0.csv", header = T)
Data = read.csv("output\\weeklyevap0_0_0.csv", header = T)
Data = read.csv("output\\weeklyevap0_0_0.csv", header = T, nrows = 2392*filesize)
Data = read.csv("output\\weeklyevap0_0_0.csv", header = T, nrows = 2392*filesize)
Data = Data[with(Data, order(Realization, Year, Week)),]
# read in one realization of weekly demand data
mCDO = matrix(0,filesize,2392)
mFL  = matrix(0,filesize,2392)
mWB  = matrix(0,filesize,2392)
for (row in 1:filesize)
{
mCDO[row,] = Data$evapDO[(1+(2392*(row-1))):(2392*(row))]
mFL[row,]  = Data$evapF[(1+(2392*(row-1))):(2392*(row))]
mWB[row,]  = Data$evapWB[(1+(2392*(row-1))):(2392*(row))]
}
HCDO = read.csv("inputfiles\\evapfiles\\updatedEvap.csv")
HFL  = read.csv("inputfiles\\evapfiles\\fallsLakeEvap.csv")
HWB  = read.csv("inputfiles\\evapfiles\\lakeWheelerBensonEvap.csv")
HCDO = HCDO[36:nrow(HCDO),]
Data = read.csv("output\\weeklyevap0_0_0.csv", header = T, nrows = 2392*filesize)
Data = Data[with(Data, order(Realization, Year, Week)),]
# read in one realization of weekly demand data
HCDO = read.csv("inputfiles\\evapfiles\\updatedEvap.csv")
HCDO = HCDO[37:nrow(HCDO),]
HFL  = read.csv("inputfiles\\evapfiles\\fallsLakeEvap.csv")
HFL  = HFL[37:nrow(HFL),]
HWB  = read.csv("inputfiles\\evapfiles\\lakeWheelerBensonEvap.csv")
HWB  = HWB[37:nrow(HWB),]
HCDO = read.csv("inputfiles\\evapfiles\\updatedEvap.csv")
HCDO = HCDO[37:nrow(HCDO),]
HFL  = read.csv("inputfiles\\evapfiles\\fallsLakeEvap.csv")
HFL  = HFL[31:nrow(HFL),]
HWB  = read.csv("inputfiles\\evapfiles\\lakeWheelerBensonEvap.csv")
HWB  = HWB[31:nrow(HWB),]
mCDO = matrix(0,filesize,2392)
mFL  = matrix(0,filesize,2392)
mWB  = matrix(0,filesize,2392)
for (row in 1:filesize)
{
mCDO[row,] = Data$evapDO[(1+(2392*(row-1))):(2392*(row))]
mFL[row,]  = Data$evapF[(1+(2392*(row-1))):(2392*(row))]
mWB[row,]  = Data$evapWB[(1+(2392*(row-1))):(2392*(row))]
}
Data = read.csv("output\\weeklyevap0_0_0.csv", header = T, nrows = 2392*filesize)
Data = Data[with(Data, order(Realization, Year, Week)),]
# read in one realization of weekly demand data
HCDO = read.csv("inputfiles\\evapfiles\\updatedEvap.csv")
HCDO = HCDO[37:nrow(HCDO),]
HCDO = as.vector(t(HCDO))
HCDO = t(replicate(filesize,HCDO))
HFL  = read.csv("inputfiles\\evapfiles\\fallsLakeEvap.csv")
HFL  = HFL[31:nrow(HFL),]
HFL  = as.vector(t(HFL))
HFL  = t(replicate(filesize,HFL))
HWB  = read.csv("inputfiles\\evapfiles\\lakeWheelerBensonEvap.csv")
HWB  = HWB[31:nrow(HWB),]
HWB  = as.vector(t(HWB))
HWB  = t(replicate(filesize,HWB))
mCDO = matrix(0,filesize,2392)
mFL  = matrix(0,filesize,2392)
mWB  = matrix(0,filesize,2392)
for (row in 1:filesize)
{
mCDO[row,] = Data$evapDO[(1+(2392*(row-1))):(2392*(row))]
mFL[row,]  = Data$evapF[(1+(2392*(row-1))):(2392*(row))]
mWB[row,]  = Data$evapWB[(1+(2392*(row-1))):(2392*(row))]
}
write.table(cbind(HCDO,mCDO), "evapLongOWASA.csv", row.names = F, col.names = F, sep = ",")
write.table(cbind(HCDO,mCDO), "evapLongCary.csv", row.names = F, col.names = F, sep = ",")
write.table(cbind(HCDO,mCDO), "evapLongDurham.csv", row.names = F, col.names = F, sep = ",")
write.table(cbind(HFL,mFL), "evapLongFalls.csv", row.names = F, col.names = F, sep = ",")
write.table(cbind(HWB,mWB), "evapLongWB.csv", row.names = F, col.names = F, sep = ",")
write.table(cbind(HCDO,mCDO), "evapLongRaleighOther.csv", row.names = F, col.names = F, sep = ",")
